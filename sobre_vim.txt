ASSUNTO:
			Map Shift+Enter
LINK:
			https://localcoder.org/how-to-map-shift-enter

ASSUNTO:
			Buffers
LINK:
			https://vi.stackexchange.com/questions/14403/how-to-go-to-previous-open-buffer-from-vim-command-line 
    	    https://stackoverflow.com/questions/1269648/how-do-i-close-a-single-buffer-out-of-many-in-vim

ASSUNTO:
			Abrir arquivo do buffer em nova tab
LINK:
            https://superuser.com/questions/66179/how-do-i-edit-an-existing-buffer-in-a-new-tab-in-vim

ASSUNTO:
			salvar no vim
LINK:
			https://stackoverflow.com/questions/3446320/in-vim-how-to-map-save-to-ctrl-s

ASSUNTO:
			edição
LINK: 
			https://pt.wikibooks.org/wiki/Vim/Editando

ASSUNTO:
			remover linhas duplicadas
LINK: 
			https://pt.wikibooks.org/wiki/Vim/Editando#Removendo_linhas_duplicadas

ASSUNTO:
			dividir janela
LINK: 
			https://pt.wikibooks.org/wiki/Vim/Dividindo_a_janela

ASSUNTO:
			mover pelo vim (teclas de movimento)
LINK: 
			https://pt.wikibooks.org/wiki/Vim/Movendo

SSUNTO:
			ctrl + z no vim
LINK: 
			https://stackoverflow.com/questions/12436154/how-to-go-back-ctrlz-in-vi-vim

ASSUNTO:
			Comandos básicos do Vim
LINK: 
			https://nbcgib.uesc.br/lec/llec/dicas/com-bas-vim

ASSUNTO:
			pulos no vim
LINK: 
			https://aurelio.net/vim/pulando.html

ASSUNTO:
			vsplit
LINK: 
			https://unix.stackexchange.com/questions/444682/opening-a-vertical-terminal-in-vim-8-1

ASSUNTO:
			exemplos de sed			
LINK: 
			https://terminalroot.com.br/2015/07/30-exemplos-do-comando-sed-com-regex.html

ASSUNTO:
			executar código a partir do vim
LINK: 
			https://www.vivaolinux.com.br/dica/Como-executar-seu-codigo-fonte-a-partir-do-Vim

ASSUNTO:
			MAP E NOREMAP: 
LINK:
			https://stackoverflow.com/questions/3776117/what-is-the-difference-between-the-remap-noremap-nnoremap-and-vnoremap-mapping

ASSUNTO:
			quebra de linha
LINK:
			https://www.vivaolinux.com.br/topico/Sed-Awk-ER-Manipulacao-de-Textos-Strings/QUEBRA-DE-LINHA-1

ASSUNTO:
			Multiseleção
LINK:
            https://engagor.github.io/blog/2018/02/21/why-vim-doesnt-need-multiple-cursors/
            https://stackoverflow.com/questions/11784408/vim-multiline-editing-like-in-sublimetext
			https://stackoverflow.com/questions/30130553/whats-the-vim-way-to-select-multiple-instances-of-current-word-and-change-them
			https://github.com/machakann/vim-multiselect

ASSUNTO:
            Multiplos cursores
LINK:
            https://engagor.github.io/blog/2018/02/21/why-vim-doesnt-need-multiple-cursors/
            https://stackoverflow.com/questions/11784408/vim-multiline-editing-like-in-sublimetext
            https://github.com/terryma/vim-multiple-cursors
			
ASSUNTO:
		clipboard
LINK:
		https://stackoverflow.com/questions/30691466/what-is-difference-between-vims-clipboard-unnamed-and-unnamedplus-settings
		https://www.vivaolinux.com.br/topico/VIM/Colar-dados-da-area-de-transferencia-no-Vim
		https://qastack.com.br/vi/84/how-can-i-copy-text-to-the-system-clipboard-from-vim

ASSUNTO:
		Preferências
LINK:
		https://pt.wikibooks.org/wiki/Vim/Como_editar_prefer%C3%AAncias#Fechamento_autom%C3%A1tico_de_par%C3%AAnteses

ASSUNTO:
		Corta espaços em branco no início e no final da string (strip)
LINK:
		https://stackoverflow.com/questions/369758/how-to-trim-whitespace-from-a-bash-variable

ASSUNTO:
		split awk
LINK:
		https://stackoverflow.com/questions/8009664/how-to-split-a-delimited-string-into-an-array-in-awk
		https://www.thegeekstuff.com/2010/03/awk-arrays-explained-with-5-practical-examples/
	  https://thoughtbot.com/blog/vim-splits-move-faster-and-more-naturally	

ASSUNTO:
		TRUECOLORS
LINK:
		https://github.com/neovim/neovim/issues/10836
		https://github.com/Niishi/monokai-neon-syntax/blob/master/styles/colors.less
		https://superuser.com/questions/556480/24-bit-true-color-in-konsole
		https://vi.stackexchange.com/questions/13458/make-vim-show-all-the-colors
		
ASSUNTO:
        Snippets
LINK:
        https://github.com/SirVer/ultisnips
        https://github.com/honza/vim-snippets
	
ASSUNTO:
      	Mover Linhas
LINK:
      	https://vim.fandom.com/wiki/Moving_lines_up_or_down

ASSUNTO:
				Arquivos, visualizar. File explorer.
LINK
				https://pt.wikibooks.org/wiki/Vim/Dividindo_a_janela
				https://vim.fandom.com/wiki/File_explorer
				https://stackoverflow.com/questions/1445992/vim-file-navigation
				http://vimcasts.org/episodes/the-file-explorer/				

ASSUNTO:
        Fechamento Automático
LINK:
        https://www.it-swarm.dev/pt/vim/suportes-de-fechamento-automaticos-para-vim/1043990135/

ASSUNTO:
        Fechamento de Janelas
LINK:
        https://stackoverflow.com/questions/4809729/cancel-split-window-in-vim

ASSUNTO:
        Fechamento de Janelas (buffer)
LINK:
        https://stackoverflow.com/questions/4545275/vim-close-all-buffers-but-this-one
        https://vim.fandom.com/wiki/Vim_buffer_FAQ
	
ASSUNTO:
        Dobras (Folding)
LINK:
        https://vim.fandom.com/wiki/Folding

ASSUNTO:
        MOVIMENTO POR ARQUIVOS (goto file)
LINK:
        https://vim.fandom.com/wiki/Open_file_under_cursor

ASSUNTO:
        PRETTY JSON IN VIM
LINK:
        https://vi.stackexchange.com/questions/16906/how-to-format-json-file-in-vim

ASSUNTO:
        SALTOS
LINK:
        https://pt.wikibooks.org/wiki/Vim/Os_saltos
        https://www.youtube.com/watch?v=g8xUgWPS2qg

ASSUNTO:
        Registradores (Register)
LINK:
        https://juliobiason.gitbooks.io/uma-licao-de-vim/content/5.html
        https://pt.wikibooks.org/wiki/Vim/Repeti%C3%A7%C3%A3o_de_comandos


No modo normal, abrir terminal dentro do vim
	:vertical terminal
	: vert terminal (OBS: maneira simplificada)

Sem clipboard
	No modo visual: 
 		selecione o texto
 		aperte dois pontos (:)
			coleque o comando de copia para a área de tranferência
				xclip:
							xclip -selection clipboard


50 % = vai para o meio o arquivo
d = deleta um caracter => dl (d seta para a direita) apaga caracter mais à direita
D = deleta um caracter para trás
dd = apaga linha atual => numerodd: 5dd (5d seta para baixo) apaga 5 linhas abaixo
w = word (salta palavra)
e = encontra próximo caracter
b = back (volte para a palavra)
B = back (volte para a palavra) apenas espaço
r = substitui um caracter
y = yank (copy)
Y = copia linha inteira
f = encontra caracter: fa => encontra próximo caracter "a"
R = substitui o texto sobre a linha
c = change (delete e entre no modo de inserção)
x = deleta um caracter
X = deleta para trás 
j = desce uma linha (caso seja digitado j e logo em seguida o comando (.) a linha abaixo receberá a informação recentemente digitada)
J = mescla linha de baixo com a de cima
* = busca todas as ocorrências para frente
# = busca todas as ocorrências para trás
> = identação
v = seleção visual
t = encontra caracter posterior e para antes de encontrá-lo: dt> -> deleta até antes do caracter de maior
T = encontra caracter anterior e para antes de encontrá-lo: dT> -> deleta até antes do caracter de maior
p = (modo normal) cola antes
P = cola depois
* = seleciona todas as palavras iguais
V = inicia modo visual para todas as linhas
o = insere quebra de linha abaixo
O = insere quebra de linha acima
s = substitui e copia a letra
S = substitui e copia a linha
c = substitui a palavra
C = substitui a linha a partir de local no qual se econtra o cursor
H = salta cursor para o top da tela
M = salta cursor para o top da tela
L = salta cursor para o final da linha
<número>gg = salta para a linha de mesmo número
<número>SHIFT + g = salta para a linha de mesmo número
ge = última letra, para trás (similar a: b | oposto a: e)
gg = vai ao início do arquivo
gf = caso esteja no buffer, abre o arquivo sob o cursor
g8 = código ASCII de uma letra
:g< = histórico de comandos
gU = maiúsculas
gt = vai para próxima tab
gT = vai para próxima tab
cc = apaga a linha e entra no modo de inserção
G = Vai para a última linha
I = mostra os arquivos ocultos
gn = /palavra; pesquisa a correnpondência de termos
gd = mostre a existência do mesmo termo ao longo do arquivo.
cgn = apaga a palavra e entra no modo inserção; depois, é só apertar ponto (.) para modificar as outras correspondências
ggVG = seleciona todas as linhas do arquivo
gUaW = tudo para maiúscula
zz = Coloca linha atual no centro da tela (Alinha on centro)
zt = Coloca linha atual no topo da tela (Alinha on centro)
zb = Coloca linha atual abaixo  da tela (Alinha on centro)
zl = desloca janela para a direita
zh = desloca janela para a esquerda
2j = desça 2 linhas
3j = desça 3 linhas

di( = delete tudo que há dentro do parênteses
di{ = delete tudo que há dentro da chave
di[ = delete tudo que há dentro do colchete
di' = delete tudo que há dentro das aspas simples
di" = delete tudo que há dentro das aspas duplas

vi( = seleciona tudo que há dentro do parênteses
vi{ = seleciona tudo que há dentro da chave
vi[ = seleciona tudo que há dentro do colchete
vi' = seleciona tudo que há dentro das aspas simples
vi" = seleciona tudo que há dentro das aspas duplas

cit = muda conteúdo dentro da tag
cat = muda a tag inteira
iw = palavra anterior
it = tag anterior (html)
ip = paragrafo anterior

i" = pergunta anterior

dw = delete a palavra

as = a sentença


tabnew = nova aba
tabnew <ARQUIVO>=  cria arquivo em nova aba

SHIFT+# = exibe e navega por todas as ocorrências de um termo
SHIFT+* = exibe e navega por todas as ocorrências de um termo
SHIFT+u = palavra toda em maiúscula
SHIFT+k = help manual

CTRL + g = nome do arquivo
CTRL + w = (modo de inserção) apaga para a esquerda (trás)
CTRL + a = incremento
CTRL + x = decremento
CTRL + x CTRL + n = (modo de inserção) autocompletar palavra 
CTRL + x CTRL + l = (modo de inserção) autocompletar linha 
CTRL + x CTRL + f = (modo de inserção) autocompletar a partir do sistema de arquivos 
CTRL + p => Abre o localizador de arquivos
CTRL + v => Abre um arquivo na mesma tela verticalmente (vsplit)
CTRL + x => Abre um arquivo na mesma tela horizontalmente (split)
CTRL + t => Abre um arquivo em nova aba
CTRL + z => Seleciona os arquivos que serão abertos
CTRL + f => Alterna entre os tipos de search (Buffers, Files, MRU)
CTRL + r => Alterar o tipo de search para usar regex
CTRL + d => Alterar o tipo de search para nao considerar os nomes dos diretorios e somente o dos arquivos
CTRL + y => Criar arquivo e pastas de acordo com o caminho informado
CTRL + u => desfazer
CTRL + PageUp => volta 
CTRL + PageDown => vai 

F5      => Refresh os arquivos


Multiplos cursores:
	EX: uso das teclas do vim: cgn.
			/ola mundo
			cgn		
			Olá, mundo!
			<ESC>
			.

			Resultado:
				Olá, mundo!


	EX: seleção visual de bloco (CTRL+y)
			CTRL + y 
				olá, mundo!
				olá, mundo! 
			I
			b

			CTRL + y = entra no modo visual de bloco
			olá, mundo! = termo utilizado
			I = entra o modo de inserção
			b = letra escolhida a ser colocada, neste caso, será no início da linha

			Resultado:
				bolá, mundo! 
				bolá, mundo! 

Multi seleção:
	EX: uso das teclas do vim: gd.
			ola mundo
            ola marreco
            marrocos ola
            marmita com feijão borrado, ola

			cursor sobre a palavra: ola
            aperte as teclas: gd		

			Resultado:
				ola <- fica colorido em tela.

    OBS: 
        Ola = será reconhecido
        Olá = não será reconhecido 
        olola = não será reconhecido  


split (nome do arquivo) = abrir tela horizontalmente 
 vplit (nome do arquivo) = abrir tela verticalmente 
 (CTRL + w) + (CTRL + w) = salta entre telas ordenadamente
 CTRL + w + (setas) = salta entre telas
 CTRL + w + r = rotaciona entre as janelas
 CTRL + w + v = abre arquivo verticalmente
 CTRL + w + s = abre arquivo horizontalmente
 CTRL + w + n = abre novo arquivo na horizontalmente 
 CTRL + w + o = fecha (quit) as telas (janelas)
 CTRL + w + T = move página atual para nova tab


# Sistema de arquivos
	:Explore
	:Sexplore
	:Vexplore

	% = cria novo arquivo
	d = cria novo direita
	R = renomeia arquivos ou diretorios
	R = deleta arquivos ou diretorios

 
# Dicionário
set spell spellang=pt
[s e ]s = navega entre erros de ortografia
z = possíveis correções para a palavra


# REGEX
  \r    pula linha              '\n'
  \d    digit                   [0-9]
  \D    non-digit               [^0-9]
  \x    hex-digit               [0-9a-fA-f]
  \X    non-hex-digit           [^0-9a-fA-f]
  \s    white-space             [   ] (<Tab> and <space>)
  \S    non-white-space         [^  ] (not <Tab> and <space>)
  \l    lowercase alpha         [a-z]
  \L    non-lowercase alpha     [^a-z]
  \u    uppercase alpha         [A-Z]
  \U    non-uppercase alpha     [^A-Z]

  \i    identifier characters   isident
  \I    tipo \i, exclui digitos 
  \k    keyword characters      iskeyword
  \K    tipo \K, exclui digitos 
  \p    printable characters    isprint
  \P    tipo \p, exclui digitos 
  \f    file name characters    isfname
  \F    tipo \F, exclui digitos 

  ## EX:
      Passe letras minúsculas para maiúsculas, na linha atual
        aa 32 P 
        :.                      # linha atual (ponto): .
        :.s///g                 # comando de substituição: g == pega todas as ocorrências
        :.s/\l//g               # Pega: [a-z]
        :.s/\(\l\)//g           # Aloca em um grupo: \(\)
        :.s/\(\l\)\+//g         # Pega pelo menos uma ocorrência: \+
        :.s/\(\l\)\+/\u\1/g     # Coloca o retrovisor em maiúsculas: \u\1
        :.s/\(\l\)\+/\u\1\u\1/g # Repete o comando acima, já que tem duas letras a: \u\1

  ## EX de REGEX no VIM:
      Comenta da linha 10 a linha 20, inclusive
        10,20s/^/#/

      Substitui no início da linha 51 até a linha 59, as aspas (") por espaço.
        51,59s/^\"//

      Substitui no final da linha 45 até a linha 53, os ponto-e-virgula (;). 
        45,53s/;$//
      
      Coloca no início da linha, onde não houver a letra "A" maiúscula, da linha 2 até a linha 22, o termo: LINK:  
        2,22s/^[^A]/Link: /

      Adicionar quebra de linha, no local em que houver uma palavra começada por A e adicione um A ao local
        4,41s/^A/\rA/

      Adiciona palavra ao final da linha e pula 2 linhas
        numero_da_linas/$/ palavra\r\r/
        
        Aonde tiver vírgula, apague, retire ou substitua
            37,s/"// <- (neovim) irá apagar um bloco de comando, como: if-endif
            37,+2s/"// <- (neovim) irá apagar da linha 37 mais 2 linhas abaixo

        
Para ativar qualquer opção no vim:
:set <option>

Para desativar qualquer opção no Vim:
:set no<option>

Para ativar / desativar uma opção:
:set <option>!

Para verificar se uma opção está ativada ou desativada:
:set <option>?

Para definir uma opção de volta ao seu padrão:
:set <option>&

Modos 
    NORMAL, VISUAL, SELEÇÃO E OPERADOR
    	:map 			= RECURSIVA
    	:noremap 	= NÃO RECURSIVA
    
    MODO NORMAL
    	:nmap
    	:nnoremap
    
    MODO VISUAL
	    :vmap
	    :vnoremap

Macros
	:reg            - Lista todas as macros já criadas
	:reg[x]         - Mostra o conteudo da macro na posição x
	qx              - Inica a gravação da macro e guarda ela no atalho "x". Ao terminar de gravar a macro pressione "q" novamente.
	@x              - Executa a macro
	10@x            - Executa a macro 10 vezes
    i"<ESC>ea"<ESC> - Coloca aspas, do início ao final da palavra
    cw"p"           - Apaga palavra e coloca aspas duplas
    a"<ESC>bi"      - Coloca aspas, do final ao início da palavra


	EX: macro => olá, mundo repetido 3 vezes.
		
			Modo Normal:
				qai Olá, mundo!<CR><ESC>q
		
				q = inicia a gravação da macro
				a = atalho escolhido
				i = entra no modo de inserção
				Ola, mundo! = termo utilizado no exemplo
				<CR> = tecla enter
				<ESC> = tecla esc
				q = encerra a macro
			
			Resultado:	
				Ola, mundo!
				Ola, mundo!
				Ola, mundo!


" TRUECOLORS
"set termguicolors
"let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
"let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"


Incremento: CTRL+a
	0
	CTRL+a
	1
	
Decremento: CTRL+x
	1
	CTRL+x
	0


MOVA LINHAS:
  # Modo normal
  nnoremap <A-j> :m .+1<CR>==
  nnoremap <A-k> :m .-2<CR>==
  
  # Modo de inserção
  inoremap <A-j> <Esc>:m .+1<CR>==gi
  inoremap <A-k> <Esc>:m .-2<CR>==gi
  
  # Modo visual
  vnoremap <A-j> :m '>+1<CR>gv=gv
  vnoremap <A-k> :m '<-2<CR>gv=gv


BUFFERS:

	:find <NOME_DO_MEU_ARQUIVO>

	:find jongas.txt

	:e # = navega para o próximo arquivo no buffer

	:b 1 = navega para o próximo arquivo no buffer 1 

	:sb 1 = navega para o próximo arquivo no buffer 1 (abre na horizontal) 

	:ls = lista os elementos abertos no buffer
	:buffers = lista os elementos abertos no buffer

	CTRL+6 = navega pelos arquivo abertos no buffer

    :tabe <ARQUIVO> = abre arquivo numa nova tab

    :tab sb <ARQUIVO> = abre arquivo em buffer numa nova tab

    :badd = adiciona arquivo ao buffer

    :bd = descarrega o buffer atual (não funciona caso tenha ocorrido modificação sem salvamento)
      :bd <NOME NO BUFFER><c-a> == completa os nomes para ser deletados do buffer

	:bw = exclui o buffer atual (bw, w não é write, mas sim wipeout)

    :%bd|e# = fecha (quit) buffers (menos o atual)

    :<NUMERO>, <NUMERO>bd = deleta todos os buffers em um intervalo
     
    n| = pula para a coluna n (número) da linha atual

    K = abre arquivo

    sort u = ordena e retira linhas duplicadas

    sort n = ordena numericamente -> :1,15 sort n


REGISTRADORES (register)
  # "{registrador}{comando}{movimento}
  registers = veja pilha armazenada dentro dos registradores
  "0   => último texto copiado para a área de tranferência
  "1   => último texto apagado
  "2   => penúltimo texto apagado
  "3   => anti-penúltimo texto apagado
  .
  .
  .
  "9   => texto apagado dentro da pilha de registradores 

  "a   => registrador "a"
  "b   => registrador "b"
  .
  .
  .
  "z   => copia a linha para o registrador "z"

  "ayy => copia a linha para o registrador "a"
  "ap  => cola o conteúdo do registrador "a" abaixo
  "bdd => apaga a linha atual para o registrador "b"

SALTOS (jumps)
  jumps = veja a pilha de saltos
  cle = limpe a pilha de saltos
  CTRL + i => salta para trás
  CTRL + o => salta para frente

ALTERAÇÔES (changes)
  changes = veja lista de alterações
  ' <caracter> = navega até a última linha
  SHIFT + `` <caracter> = navega até a última posição exata

  ge = última letra, para trás (similar a: b | oposto a: e)
  g, = avança na lista de alterações
  g; = retrocede na lista de alterações
  SHIFT + ``. = navega até o local exato no qual ocorreu a última modificação no buffers atual ( arquivo atual )
  '. = navega até a linha na qual ocorreu a última modificação no buffers atual ( arquivo atual )
  '' =  navega para a última linha na qual ocorreu alguma alteração ainda dentro do arquivo

MARCAS (marks)
  marks = veja a lista de marcas
  m<caracter> = seta uma marcação no elemento atual
  '<caracter> = navega até a linha contendo a marcação realizada em determinado arquivo
  SHIFT + ' + SHIFT " = navega até a última posição do cursor antes de sair do arquivo
  ^o = retroceder na lista de saltos
  SHIFT + ``<caracter> = navega até o local exato no qual a marcação foi realizada
  SHIFT + `` < = navega até o começo da última marcação visual realizada
  SHIFT + `` > = navega até o final da última marcação visual realizada
  SHIFT + `` [ = navega até o começo da última cópia realizada
  SHIFT + `` ] = navega até o final da última cópia realizada
  'SHIFT + ^^ = navega até a última linha onde ocorreu uma inserção
  SHIFT + `` + SHIFT + ^^ = navega até o local exato no qual ocorreu a última inserção
  delm = delete a lista de marcas
  delm! = delete as marcações de em um arquivo
  delm <caracter> = delete uma marcação
  delm <caracter> <caracter> = delete duas marcações
  delm <range>= delete um intervalo de marcações

Dobras (Foldings):
	zf<NÚMERO> = crie uma dobra
	zo = abra
	za = toggle (abre e fecha)
	zA = toggle (abre e fecha) recursivo
	zr = reduz a dobra abrindo mais um nível de dobras em todo o buffer (abre dobras de fora para dentro)
	zR = reduz a dobra abrindo mais um nível de dobras em todo o buffer (todo arquivo)
	zm = fecha (inverso de zr)
	zM = fecha tudo (inverso de zR)
	z0 = dobra e sub-dobra
	zc = feche
	zC = feche a dobra e a sub-dobra
	zd = delete
	zD = delete recursivo


Movimento entre arquivos:
  sobre o nome do arquivo:
    gf
  caso o nome do arquivo não esteja claro:
    modo visual: 
      v<selecione o nome do arquivo>gf

  CTRL + w f  = abre numa nova janela
  CTRL + w gf = abre numa nova tab


PRETTY JSON
  jq == processador de json em linha de comando
  :%! jq .


REPETIÇÃO DE COMANDOS
  80i-<Esc>  (Vim/Column)
  20gi-<Esc> (Nvim/Column) || 20i-<Esc> (Nvim/Line)
  , = esquerda (retrocede)
  ; = direita  (avança)


VOLTA NO TEMPO (aqui, 10 minutos)
  :earlier 10m

TEMPO
  time<TAB>


RENUMERA
  selecione os números (neste exemplo, os zeros) e:
      g CTRL + a
        0
        0
        0

        1
        2
        3


PACKER
	Instalação de um pacote via packer
	```bash
		mkdir -p ~/.vim/pack/plugins/start
		git clone https://github.com/prettier/vim-prettier ~/.vim/pack/plugins/start/vim-prettier
		```

		`.vimrc`:
		```vim
		packloadall
	```



TERMINAL
  "term://${PWD}/{PID}:/usr/bin/zsh"
  "term://~/computation/docker//3991:/usr/bin/zsh"


TELESCOPE
    <C-x> == split
    <C-v> == vsplit
    <C-t> == new tab
